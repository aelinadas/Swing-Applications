/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.Uber;
import business.UberDirectory;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aelinadas
 */
public class AvailableUnavailableCarListJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AvailableUnavailableCarListJPanel
     */
    private UberDirectory uberDirectory;
    private JPanel userJPanelController;
    AvailableUnavailableCarListJPanel(JPanel userJPanelController, UberDirectory uberDirectory) {
        initComponents();
        this.uberDirectory = uberDirectory;
        this.userJPanelController = userJPanelController;
    }
    
    ArrayList<Uber> tempArray = new ArrayList<Uber>();
    private int available = 0;
    private int notAvailable = 0;
    
    private void populateTable(ArrayList<Uber> popList){
        DefaultTableModel dtm = (DefaultTableModel)tblManage.getModel();
        dtm.setRowCount(0);
        for(Uber uber: popList){
            Object[] row = new Object[5];
            row[0] = uber;
            row[1] = uber.getModelNumber();
            row[2] = uber.getSerialNumber();
            row[3] = uber.getCity();
            if (uber.getAvailability()) {
               row[4]="Available";
            } else {
               row[4]="Unavailable";
            }
            
            dtm.addRow(row);
        }
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblManageField = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblManage = new javax.swing.JTable();
        btnAvailCar = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        btnUnavailCar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtAvail = new javax.swing.JTextField();
        txtUnavail = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        lblManageField.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        lblManageField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblManageField.setText("AVAILABILITY OR UNAVAILABLITY OF CARS");

        tblManage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Model Number", "Serial Number", "City", "Availabilty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManage.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane3.setViewportView(tblManage);

        btnAvailCar.setText("Show Available Cars");
        btnAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailCarActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUnavailCar.setText("Show Unavailable Cars");
        btnUnavailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUnavailCarActionPerformed(evt);
            }
        });

        jLabel1.setText("Total Available Cars:");

        jLabel2.setText("Total Unavailable Cars:");

        txtAvail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAvailKeyTyped(evt);
            }
        });

        txtUnavail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtUnavailKeyTyped(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(243, 243, 243)
                .addComponent(lblManageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(222, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(32, 32, 32)
                        .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtUnavail, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnBack)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnView))
                        .addComponent(btnAvailCar)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 465, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnUnavailCar)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2)
                            .addGap(106, 106, 106))))
                .addGap(213, 213, 213))
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAvailCar, btnUnavailCar});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblManageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAvailCar)
                    .addComponent(jLabel1)
                    .addComponent(txtAvail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUnavailCar)
                    .addComponent(jLabel2)
                    .addComponent(txtUnavail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnView))
                .addContainerGap(306, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailCarActionPerformed
        // TODO add your handling code here:
        tempArray.clear();
        available = 0;
        for(Uber uber: uberDirectory.getUberDirectory()){
            if(uber.getAvailability()){
                tempArray.add(uber);
                available++;
            }
        }
        if (tempArray!=null && !tempArray.isEmpty()) {
            populateTable(tempArray);
            txtAvail.setText((Integer.toString(available)) + "");     
        } else {
            JOptionPane.showMessageDialog(null, "Sorry!! No car available of your search criteria.");
        }
    }//GEN-LAST:event_btnAvailCarActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userJPanelController.remove(this);
        CardLayout layout = (CardLayout)userJPanelController.getLayout();
        layout.previous(userJPanelController);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUnavailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUnavailCarActionPerformed
        // TODO add your handling code here:
        tempArray.clear();
        notAvailable = 0;
        for(Uber uber: uberDirectory.getUberDirectory()){
            if(!uber.getAvailability()){
                tempArray.add(uber);
                notAvailable++;
            }   
        }
        if (tempArray!=null && !tempArray.isEmpty()) {
            populateTable(tempArray);
            txtUnavail.setText((Integer.toString(notAvailable)) + "");
        } else {
            JOptionPane.showMessageDialog(null, "Sorry!! No car available of your search criteria.");
        } 
    }//GEN-LAST:event_btnUnavailCarActionPerformed

    private void txtAvailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvailKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        int num = evt.getKeyCode();
        if(!Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtAvailKeyTyped

    private void txtUnavailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUnavailKeyTyped
        // TODO add your handling code here:
        char ch = evt.getKeyChar();
        int num = evt.getKeyCode();
        if(!Character.isDigit(ch) || (ch == KeyEvent.VK_BACK_SPACE) || (ch == KeyEvent.VK_DELETE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtUnavailKeyTyped

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManage.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details");
        }else{
            Uber uber = (Uber)tblManage.getValueAt(selectedRow, 0);
            ViewListJPanel panel = new ViewListJPanel(userJPanelController, uber);
            userJPanelController.add("ViewListJPanel", panel);
            CardLayout layout = (CardLayout)userJPanelController.getLayout();
            layout.next(userJPanelController);
        }
    }//GEN-LAST:event_btnViewActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailCar;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnUnavailCar;
    private javax.swing.JButton btnView;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lblManageField;
    private javax.swing.JTable tblManage;
    private javax.swing.JTextField txtAvail;
    private javax.swing.JTextField txtUnavail;
    // End of variables declaration//GEN-END:variables
}
