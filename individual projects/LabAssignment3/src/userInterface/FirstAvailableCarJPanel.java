/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface;

import business.Uber;
import business.UberDirectory;
import java.awt.CardLayout;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author aelinadas
 */
public class FirstAvailableCarJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FirstAvailableCarJPanel
     */
    private UberDirectory uberDirectory;
    private JPanel userJPanelController;
    private ArrayList<Uber> tempArray = null;
    FirstAvailableCarJPanel(JPanel userJPanelController, UberDirectory uberDirectory) {
        initComponents();
        this.userJPanelController = userJPanelController;
        this.uberDirectory = uberDirectory;
    }

    
    
    private void populateTable(ArrayList<Uber> popList){
        DefaultTableModel dtm = (DefaultTableModel)tblManage.getModel();
        dtm.setRowCount(0);
        for(Uber uber: popList){
            Object[] row = new Object[5];
            row[0] = uber;
            row[1] = uber.getModelNumber();
            row[2] = uber.getSerialNumber();
            row[3] = uber.getCity();
            if (uber.getAvailability()) {
               row[4]="Available";
            } else {
               row[4]="Unavailable";
            }
            
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblManage = new javax.swing.JTable();
        btnAvailCar = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        lblManageField = new javax.swing.JTextField();
        txtAvailCarsCity = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();

        tblManage.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Car Name", "Model Number", "Serial Number", "City", "Availabilty"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManage.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        jScrollPane3.setViewportView(tblManage);

        btnAvailCar.setText("Show Available Cars in the City");
        btnAvailCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvailCarActionPerformed(evt);
            }
        });

        btnBack.setText("<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblManageField.setFont(new java.awt.Font("Arial Rounded MT Bold", 1, 18)); // NOI18N
        lblManageField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lblManageField.setText("AVAILABILITY OF CAR IN THE CITY");

        txtAvailCarsCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAvailCarsCityActionPerformed(evt);
            }
        });
        txtAvailCarsCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtAvailCarsCityKeyTyped(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(289, 289, 289)
                .addComponent(lblManageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(166, 166, 166))
                            .addComponent(txtAvailCarsCity, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAvailCar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnView, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 618, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(132, 132, 132))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(lblManageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAvailCarsCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAvailCar))
                .addGap(37, 37, 37)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnView))
                .addContainerGap(331, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 900, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 600, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblManage.getSelectedRow();
        if(selectedRow < 0){
            JOptionPane.showMessageDialog(null, "Please select a row from the table to view details");
        }else{
            Uber uber = (Uber)tblManage.getValueAt(selectedRow, 0);
            ViewListJPanel panel = new ViewListJPanel(userJPanelController, uber);
            userJPanelController.add("ViewListJPanel", panel);
            CardLayout layout = (CardLayout)userJPanelController.getLayout();
            layout.next(userJPanelController);
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtAvailCarsCityKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAvailCarsCityKeyTyped
        // TODO add your handling code here:
        int chk=evt.getKeyCode();
        char ch = evt.getKeyChar();
        if(!Character.isLetter(ch) && (chk!= KeyEvent.VK_BACK_SPACE) && !Character.isWhitespace(ch)){
            evt.consume();
        }
    }//GEN-LAST:event_txtAvailCarsCityKeyTyped

    private void txtAvailCarsCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAvailCarsCityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAvailCarsCityActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userJPanelController.remove(this);
        CardLayout layout = (CardLayout)userJPanelController.getLayout();
        layout.previous(userJPanelController);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAvailCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvailCarActionPerformed
        // TODO add your handling code here:
        if(!txtAvailCarsCity.getText().trim().equals("")){
            tempArray=new ArrayList<Uber>();
            tempArray=uberDirectory.searchFirstAvailableCar(txtAvailCarsCity.getText().trim());
            if (tempArray!=null && !tempArray.isEmpty()) {
                populateTable(tempArray);
            } else {
                int dialogButton = JOptionPane.YES_NO_OPTION;
                int dialogResult = JOptionPane.showConfirmDialog(null, "Sorry!! Currently no car is available in the given city. Would you like to see cars in nearby cities?", "Message", dialogButton);
                if(dialogResult == JOptionPane.YES_OPTION){
                    ArrayList<Uber> filterList=new ArrayList<Uber>();
                    for (Uber ube : uberDirectory.getUberDirectory()) {
                        if (ube.getAvailability()) {
                            filterList.add(ube);
                        }
                    }
                    if (filterList!=null && !filterList.isEmpty()) {
                        populateTable(filterList);
                    }else{
                        JOptionPane.showMessageDialog(null, "OOPS!!Empty Catalog!!");
                    }
                }else{
                    DefaultTableModel dtm = (DefaultTableModel)tblManage.getModel();
                    dtm.setRowCount(0);
                }
            }
        }else{
            JOptionPane.showMessageDialog(null, "Please input city name.");
        }
    }//GEN-LAST:event_btnAvailCarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvailCar;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnView;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField lblManageField;
    private javax.swing.JTable tblManage;
    private javax.swing.JTextField txtAvailCarsCity;
    // End of variables declaration//GEN-END:variables
}
